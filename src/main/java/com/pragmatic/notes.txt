У чому різниця між list<Object> та Object[], детально
інкапсуляція
розібрати equals та hashvalue


Дописати репозиторії і оновлення файлу в них
Продумати, які дії мені прописувати, що може змінювати в тих даних, які я ввожу

Для чого робити новий екземпляр експешена.
Які бувають ексепшени . Catchable / uncathable
Перевод валют продумати, де його б брати

•	A method that adds a user.
UserRepo -> createUser
•	A method that adds an account.
AccountRepo -> createAccount
•	A method that transfers funds from one account to another.
AccountService -> MoneyTransfer. Дописав логування в аккаунт файл.
•	A method that outputs a list of users to the console.
UserRepo
•	A method that outputs the data of a specific user to the console.
User
•	A method that displays the accounts of a specific user in the console.
User
•	A method that displays an account statement for a certain period.
TODO перевірити чи існує і чи працює.

•	All these methods should be covered by unit tests.



1.	Java Syntax
2.	Comparison of objects in java. Like: !=, ==, >, <, >=, <=, equals(), hashCode(), comparators.
3.	Collections knowledge (Medium knowledge required: must know which collection is sortable and which is not, and which collection is used for which purposes)
4.	Exceptions (What kind of exceptions are used in java. Exception hierarchy)
5.	Practical application of the principles of OOP. Inheritance, polymorphism and encapsulation
6.	Input/Output stream – it is commonly used in Java. It can be called an interface between the foreign world and Java application.



Не міг додати нормально депенденсі, не вантажилось, знайшов звідки йшло.
Розібрати детальніше дебаггер як працює в ідеї
що таке restcontoller advice
коментарі на укр мові ( хоткі)

Альтернатива для @Size анотації буде min та для


22.8.24
Розібратись по видам бінів ( скоупи точніше)
РОзповісти за депенденсі інжекшен паттерн
Апплікейшен контекст ( клас) прочитати та показати як його використовувати, і чим він відрізняється від підходу з анотаціями.
Через апп контекст напис код який отримає бін зі скоупом сінгл тон, і бін зі скоупом протототайп.

Концепция Dependency Injection состоит в том, чтобы перенести ответственность за создание экземпляра объекта из тела метода за пределы класса и
передать уже созданный экземпляр объекта обратно. Вот и все!
https://topjava.ru/blog/back-to-basics-dependency-injection


27.08.2024
Створити бін з залежністю від бінів ( бін н1 має в собі зберігати змінну з значенням біна н2)
Підключити до проєкту ломбок,
У всіх контролерах додати анотацію лог4ж2, розповісти що вона робить,
в цих же контроллерах додати логування після кожного рядка бізнес логіки. Тільки всередині метода контроллера.
Для цього хмл файл потрібен.  Знайти конфігурацію, поки не розбиратись детально.
В контроллер додати анотацію •	AllArgsConstructor, і зробити так щоб всі біни інжектились через цей контруктор. Розказати за цю анотацію, що вона робить.

28.08
Написати тести для репозиторія та сервіса.
Подивитись інтеграційні тести ( в чому різниця між інт та юніт тестами)

02.09
Юніт тести на репозиторій, на сервіс.
ПОчитати  equals and hashcode як порівнюються об'єкти, база база.
Ы пояснити чого воно не має працювати або неправильно працювало. Зробити так, щоб правильно працювало.
Всюди де в мене аккаунти порівнюються.


